{"ast":null,"code":"var _jsxFileName = \"/Users/andersoncastiblanco/Documents/Learning/React-orreilly/using-hooks/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const requestConfig = {\n    url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n    body: {},\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const createTask = data => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const {\n    isLoading,\n    error,\n    sendRequest: createTaskRequest\n  } = useHttp();\n  const enterTaskHandler = async taskText => {\n    createTaskRequest({\n      url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      body: {\n        text: taskText\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }, createTask);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"PRPdouGtBp3xPRmfpZVIeT5ktPw=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","jsxDEV","_jsxDEV","NewTask","props","_s","requestConfig","url","body","method","headers","createTask","data","generatedId","name","createdTask","id","text","taskText","onAddTask","isLoading","error","sendRequest","createTaskRequest","enterTaskHandler","children","onEnterTask","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andersoncastiblanco/Documents/Learning/React-orreilly/using-hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["// import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\n\nconst NewTask = (props) => {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const requestConfig = {\n    url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n    body: {},\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const createTask = (data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const { isLoading, error, sendRequest: createTaskRequest } = useHttp();\n\n  const enterTaskHandler = async (taskText) => {\n    createTaskRequest(\n      {\n        url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n        method: \"POST\",\n        body: { text: taskText },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      createTask\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA;;AAEA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB;EACA;;EAEA,MAAMC,aAAa,GAAG;IACpBC,GAAG,EAAE,qEAAqE;IAC1EC,IAAI,EAAE,CAAC,CAAC;IACRC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;IAC/B,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAW;MAAEI,IAAI,EAAEC;IAAS,CAAC;IAEvDd,KAAK,CAACe,SAAS,CAACJ,WAAW,CAAC;EAC9B,CAAC;EAED,MAAM;IAAEK,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAkB,CAAC,GAAGvB,OAAO,CAAC,CAAC;EAEtE,MAAMwB,gBAAgB,GAAG,MAAON,QAAQ,IAAK;IAC3CK,iBAAiB,CACf;MACEhB,GAAG,EAAE,qEAAqE;MAC1EE,MAAM,EAAE,MAAM;MACdD,IAAI,EAAE;QAAES,IAAI,EAAEC;MAAS,CAAC;MACxBR,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,EACDC,UACF,CAAC;EACH,CAAC;EAED,oBACET,OAAA,CAACJ,OAAO;IAAA2B,QAAA,gBACNvB,OAAA,CAACH,QAAQ;MAAC2B,WAAW,EAAEF,gBAAiB;MAACG,OAAO,EAAEP;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DV,KAAK,iBAAInB,OAAA;MAAAuB,QAAA,EAAIJ;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA1CIF,OAAO;EAAA,QAoBkDH,OAAO;AAAA;AAAAgC,EAAA,GApBhE7B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}