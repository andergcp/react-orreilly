{"ast":null,"code":"var _jsxFileName = \"/Users/andersoncastiblanco/Documents/Learning/React-orreilly/using-hooks/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const requestConfig = {\n    url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n    body: {},\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const applyData = data => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp(requestConfig, applyData);\n\n  // const enterTaskHandler = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n  //       {\n  //         method: \"POST\",\n  //         body: JSON.stringify({ text: taskText }),\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Request failed!\");\n  //     }\n\n  //     const data = await response.json();\n\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n  //     const createdTask = { id: generatedId, text: taskText };\n\n  //     props.onAddTask(createdTask);\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: sendRequest,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"CCnshfZlH2rzEybPx6MnKYOG61s=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","jsxDEV","_jsxDEV","NewTask","props","_s","requestConfig","url","body","method","headers","applyData","data","generatedId","name","createdTask","id","text","taskText","onAddTask","isLoading","error","sendRequest","children","onEnterTask","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andersoncastiblanco/Documents/Learning/React-orreilly/using-hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["// import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\n\nconst NewTask = (props) => {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const requestConfig = {\n    url: \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n    body: {},\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const applyData = (data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const { isLoading, error, sendRequest } = useHttp(requestConfig, applyData);\n\n  // const enterTaskHandler = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-practice-30150-default-rtdb.firebaseio.com/tasks.json\",\n  //       {\n  //         method: \"POST\",\n  //         body: JSON.stringify({ text: taskText }),\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Request failed!\");\n  //     }\n\n  //     const data = await response.json();\n\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n  //     const createdTask = { id: generatedId, text: taskText };\n\n  //     props.onAddTask(createdTask);\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  return (\n    <Section>\n      {/* <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} /> */}\n      <TaskForm onEnterTask={sendRequest} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA;;AAEA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB;EACA;;EAEA,MAAMC,aAAa,GAAG;IACpBC,GAAG,EAAE,qEAAqE;IAC1EC,IAAI,EAAE,CAAC,CAAC;IACRC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;IAC/B,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAW;MAAEI,IAAI,EAAEC;IAAS,CAAC;IAEvDd,KAAK,CAACe,SAAS,CAACJ,WAAW,CAAC;EAC9B,CAAC;EAED,MAAM;IAAEK,SAAS;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGtB,OAAO,CAACM,aAAa,EAAEK,SAAS,CAAC;;EAE3E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA,CAACJ,OAAO;IAAAyB,QAAA,gBAENrB,OAAA,CAACH,QAAQ;MAACyB,WAAW,EAAEF,WAAY;MAACG,OAAO,EAAEL;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDR,KAAK,iBAAInB,OAAA;MAAAqB,QAAA,EAAIF;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAACxB,EAAA,CA5DIF,OAAO;EAAA,QAoB+BH,OAAO;AAAA;AAAA8B,EAAA,GApB7C3B,OAAO;AA8Db,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}