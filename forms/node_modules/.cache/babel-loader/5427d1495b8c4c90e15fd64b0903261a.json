{"ast":null,"code":"var _jsxFileName = \"/Users/andersoncastiblanco/Documents/Learning/React-orreilly/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // Name\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [inputNameTouched, setInputNameTouched] = useState(false);\n\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // const inputNameIsInvalid = inputNameTouched && !enteredNameIsValid;\n\n  const {\n    hasError: nameHasError,\n    enteredValue: enteredName,\n    changeHandler: inputNameChangeHandler,\n    onBlurHandler: onBlurNameHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const nameInputClassname = inputNameIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  // E-mail\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [inputEmailTouched, setInputEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\n  const inputEmailIsInvalid = inputEmailTouched && !enteredEmailIsValid;\n  const emailInputClassname = inputEmailIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  // Form validity\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  // const inputNameChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n  // };\n\n  // const onBlurNameHandler = () => {\n  //   setInputNameTouched(true);\n  // };\n\n  const inputEmailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const onBlurEmailHandler = () => {\n    setInputEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setInputNameTouched(true);\n    setInputEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setInputNameTouched(false);\n    setEnteredEmail(\"\");\n    setInputEmailTouched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClassname,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputNameChangeHandler,\n        onBlur: onBlurNameHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), inputNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClassname,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputEmailChangeHandler,\n        onBlur: onBlurEmailHandler,\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), inputEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"gVwVGonUfARZcHl4pwAltva9+7A=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","hasError","nameHasError","enteredValue","enteredName","changeHandler","inputNameChangeHandler","onBlurHandler","onBlurNameHandler","reset","resetNameInput","value","trim","nameInputClassname","inputNameIsInvalid","enteredEmail","setEnteredEmail","inputEmailTouched","setInputEmailTouched","enteredEmailIsValid","inputEmailIsInvalid","emailInputClassname","formIsValid","enteredNameIsValid","inputEmailChangeHandler","event","target","onBlurEmailHandler","formSubmissionHandler","preventDefault","setInputNameTouched","setEnteredName","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["/Users/andersoncastiblanco/Documents/Learning/React-orreilly/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  // Name\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [inputNameTouched, setInputNameTouched] = useState(false);\n\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // const inputNameIsInvalid = inputNameTouched && !enteredNameIsValid;\n\n  const {\n    hasError: nameHasError,\n    enteredValue: enteredName,\n    changeHandler: inputNameChangeHandler,\n    onBlurHandler: onBlurNameHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const nameInputClassname = inputNameIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  // E-mail\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [inputEmailTouched, setInputEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\n  const inputEmailIsInvalid = inputEmailTouched && !enteredEmailIsValid;\n  const emailInputClassname = inputEmailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  // Form validity\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  // const inputNameChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n  // };\n\n  // const onBlurNameHandler = () => {\n  //   setInputNameTouched(true);\n  // };\n\n  const inputEmailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const onBlurEmailHandler = () => {\n    setInputEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setInputNameTouched(true);\n    setInputEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setInputNameTouched(false);\n    setEnteredEmail(\"\");\n    setInputEmailTouched(false);\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClassname}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={inputNameChangeHandler}\n          onBlur={onBlurNameHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n        />\n        {inputNameIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClassname}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          onChange={inputEmailChangeHandler}\n          onBlur={onBlurEmailHandler}\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n        />\n        {inputEmailIsInvalid && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}