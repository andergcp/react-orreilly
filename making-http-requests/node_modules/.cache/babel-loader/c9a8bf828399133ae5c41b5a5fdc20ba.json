{"ast":null,"code":"var _jsxFileName = \"/Users/andersoncastiblanco/Documents/Learning/React-orreilly/making-http-requests/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport { addMovie, fetchMovies } from \"./services/moviesService\";\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const addMovieHandler = async movie => {\n    await addMovie(movie);\n  };\n\n  // Function using async await\n  const fetchMoviesHandler = useCallback(async () => {\n    fetchMovies(setIsLoading, setMoviesList, setError);\n    // try {\n    //   setIsLoading(true);\n    //   // const response = await fetch(\"https://swapi.dev/api/films/\"); // Fetching the swapi API\n    //   const response = await fetch(\n    //     \"https://react-practice-30150-default-rtdb.firebaseio.com/movies.json\"\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error(\"Something went wrong\");\n    //   }\n    //   const data = await response.json();\n\n    //   const moviesList = [];\n\n    //   for (const key in data) {\n    //     moviesList.push({\n    //       id: key,\n    //       title: data[key].title,\n    //       releaseDate: data[key].releaseDate,\n    //       openingText: data[key].openingText,\n    //     });\n    //   }\n\n    //   console.log(\"data\", data);\n    //   // const tranformedData = data.results.map((movieData) => {\n    //   //   return {\n    //   //     id: movieData.episode_id,\n    //   //     title: movieData.title,\n    //   //     releaseDate: movieData.release_date,\n    //   //     openingText: movieData.opening_crawl,\n    //   //   };\n    //   // });\n    //   // setMoviesList(tranformedData);\n    //   console.log(\"moviesList\", moviesList);\n    //   setMoviesList(moviesList);\n    // } catch (error) {\n    //   setError(error.message);\n    // }\n    // setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, !isLoading && moviesList.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moviesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), !isLoading && moviesList.length === 0 && !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"No movies found.\"), !isLoading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, error), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","addMovie","fetchMovies","App","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","addMovieHandler","movie","fetchMoviesHandler","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAddMovie","onClick","length","movies"],"sources":["/Users/andersoncastiblanco/Documents/Learning/React-orreilly/making-http-requests/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport { addMovie, fetchMovies } from \"./services/moviesService\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const addMovieHandler = async (movie) => {\n    await addMovie(movie);\n  };\n\n  // Function using async await\n  const fetchMoviesHandler = useCallback(async () => {\n    fetchMovies(setIsLoading, setMoviesList, setError);\n    // try {\n    //   setIsLoading(true);\n    //   // const response = await fetch(\"https://swapi.dev/api/films/\"); // Fetching the swapi API\n    //   const response = await fetch(\n    //     \"https://react-practice-30150-default-rtdb.firebaseio.com/movies.json\"\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error(\"Something went wrong\");\n    //   }\n    //   const data = await response.json();\n\n    //   const moviesList = [];\n\n    //   for (const key in data) {\n    //     moviesList.push({\n    //       id: key,\n    //       title: data[key].title,\n    //       releaseDate: data[key].releaseDate,\n    //       openingText: data[key].openingText,\n    //     });\n    //   }\n\n    //   console.log(\"data\", data);\n    //   // const tranformedData = data.results.map((movieData) => {\n    //   //   return {\n    //   //     id: movieData.episode_id,\n    //   //     title: movieData.title,\n    //   //     releaseDate: movieData.release_date,\n    //   //     openingText: movieData.opening_crawl,\n    //   //   };\n    //   // });\n    //   // setMoviesList(tranformedData);\n    //   console.log(\"moviesList\", moviesList);\n    //   setMoviesList(moviesList);\n    // } catch (error) {\n    //   setError(error.message);\n    // }\n    // setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && moviesList.length > 0 && (\n          <MoviesList movies={moviesList} />\n        )}\n        {!isLoading && moviesList.length === 0 && !error && (\n          <p>No movies found.</p>\n        )}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}